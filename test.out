Finding dispatchers
(reg) 0xc75:	jmp	rsp
---
(reg) 0xc75:	jmp	r12
---
(reg) 0xc75:	in	al, dx
(reg) 0xc76:	jmp	r12
---
(reg) 0xc75:	mov	esp, ebp
(reg) 0xc77:	jmp	r12
---
(reg) 0xc75:	mov	rsp, r13
(reg) 0xc78:	jmp	r12
---
(reg) 0xc75:	add	byte ptr [rcx + rcx*4 - 0x14], cl
(reg) 0xc79:	jmp	r12
---
(reg) 0xc75:	add	byte ptr [rax], al
(reg) 0xc77:	mov	rsp, r13
(reg) 0xc7a:	jmp	r12
---
(reg) 0xc75:	inc	byte ptr [rax]
(reg) 0xc77:	add	byte ptr [rcx + rcx*4 - 0x14], cl
(reg) 0xc7b:	jmp	r12
---
(reg) 0xc75:	inc	byte ptr [r8]
(reg) 0xc78:	add	byte ptr [rcx + rcx*4 - 0x14], cl
(reg) 0xc7c:	jmp	r12
---
(reg) 0xc75:	adc	eax, 0xfe4f
(reg) 0xc7a:	mov	rsp, r13
(reg) 0xc7d:	jmp	r12
---
(reg) 0x1dcf:	jmp	rdx
---
(reg) 0x1dcf:	add	edx, eax
(reg) 0x1dd1:	jmp	rdx
---
(reg) 0x1dcf:	add	rdx, r8
(reg) 0x1dd2:	jmp	rdx
---
(reg) 0x1dcf:	cwde	
(reg) 0x1dd0:	add	rdx, r8
(reg) 0x1dd3:	jmp	rdx
---
(reg) 0x1dcf:	adc	al, 0x98
(reg) 0x1dd1:	add	rdx, r8
(reg) 0x1dd4:	jmp	rdx
---
(reg) 0x1dcf:	movsxd	rdx, dword ptr [rax + rbx*4]
(reg) 0x1dd2:	add	rdx, r8
(reg) 0x1dd5:	jmp	rdx
---
(reg) 0x1dcf:	movsxd	rdx, dword ptr [r8 + rbx*4]
(reg) 0x1dd3:	add	rdx, r8
(reg) 0x1dd6:	jmp	rdx
---
(reg) 0x1dcf:	movsxd	rdx, dword ptr [r8 + rbx*4]
(reg) 0x1dd4:	add	rdx, r8
(reg) 0x1dd7:	jmp	rdx
---
(reg) 0x1dcf:	ja	0x1e13
(reg) 0x1dd1:	movsxd	rdx, dword ptr [r8 + rbx*4]
(reg) 0x1dd5:	add	rdx, r8
(reg) 0x1dd8:	jmp	rdx
---
(reg) 0x22ff:	jmp	rax
---
(reg) 0x22ff:	add	eax, ecx
(reg) 0x2301:	jmp	rax
---
(reg) 0x22ff:	add	rax, rcx
(reg) 0x2302:	jmp	rax
---
(reg) 0x22ff:	add	al, 0x81
(reg) 0x2301:	add	rax, rcx
(reg) 0x2304:	jmp	rax
---
(reg) 0x22ff:	movsxd	rax, dword ptr [rcx + rax*4]
(reg) 0x2302:	add	rax, rcx
(reg) 0x2305:	jmp	rax
---
(reg) 0x22ff:	movsxd	rax, dword ptr [rcx + rax*4]
(reg) 0x2303:	add	rax, rcx
(reg) 0x2306:	jmp	rax
---
(reg) 0x22ff:	add	byte ptr [rax + 0x63], cl
(reg) 0x2302:	add	al, 0x81
(reg) 0x2304:	add	rax, rcx
(reg) 0x2307:	jmp	rax
---
(reg) 0x22ff:	add	dword ptr [rax], eax
(reg) 0x2301:	movsxd	rax, dword ptr [rcx + rax*4]
(reg) 0x2305:	add	rax, rcx
(reg) 0x2308:	jmp	rax
---
(reg) 0xc7fb:	jmp	rdx
---
(reg) 0xc7fb:	cli	
(reg) 0xc7fc:	jmp	rdx
---
(reg) 0xc7fb:	add	edx, edi
(reg) 0xc7fd:	jmp	rdx
---
(reg) 0xc7fb:	add	rdx, rdi
(reg) 0xc7fe:	jmp	rdx
---
(reg) 0xc7fb:	mov	bh, 0x48
(reg) 0xc7fd:	add	edx, edi
(reg) 0xc7ff:	jmp	rdx
---
(reg) 0xc7fb:	adc	al, 0xb7
(reg) 0xc7fd:	add	rdx, rdi
(reg) 0xc800:	jmp	rdx
---
(reg) 0xc7fb:	movsxd	rdx, dword ptr [rdi + rsi*4]
(reg) 0xc7fe:	add	rdx, rdi
(reg) 0xc801:	jmp	rdx
---
(reg) 0xc7fb:	movsxd	rdx, dword ptr [rdi + r14*4]
(reg) 0xc7ff:	add	rdx, rdi
(reg) 0xc802:	jmp	rdx
---
(reg) 0xc7fb:	add	byte ptr [rdx + 0x63], cl
(reg) 0xc7fe:	adc	al, 0xb7
(reg) 0xc800:	add	rdx, rdi
(reg) 0xc803:	jmp	rdx
---
(reg) 0xc7fb:	add	dword ptr [rax], eax
(reg) 0xc7fd:	movsxd	rdx, dword ptr [rdi + r14*4]
(reg) 0xc801:	add	rdx, rdi
(reg) 0xc804:	jmp	rdx
---
(reg) 0xd174:	jmp	rdx
---
(reg) 0xd174:	add	edx, esi
(reg) 0xd176:	jmp	rdx
---
(reg) 0xd174:	add	rdx, rsi
(reg) 0xd177:	jmp	rdx
---
(reg) 0xd174:	mov	dh, 0x48
(reg) 0xd176:	add	edx, esi
(reg) 0xd178:	jmp	rdx
---
(reg) 0xd174:	adc	al, 0xb6
(reg) 0xd176:	add	rdx, rsi
(reg) 0xd179:	jmp	rdx
---
(reg) 0xd174:	movsxd	rdx, dword ptr [rsi + rsi*4]
(reg) 0xd177:	add	rdx, rsi
(reg) 0xd17a:	jmp	rdx
---
(reg) 0xd174:	movsxd	rdx, dword ptr [rsi + r14*4]
(reg) 0xd178:	add	rdx, rsi
(reg) 0xd17b:	jmp	rdx
---
(reg) 0xd174:	add	byte ptr [rdx + 0x63], cl
(reg) 0xd177:	adc	al, 0xb6
(reg) 0xd179:	add	rdx, rsi
(reg) 0xd17c:	jmp	rdx
---
(reg) 0xd174:	add	dword ptr [rax], eax
(reg) 0xd176:	movsxd	rdx, dword ptr [rsi + r14*4]
(reg) 0xd17a:	add	rdx, rsi
(reg) 0xd17d:	jmp	rdx
---
(reg) 0x104b1:	jmp	rax
---
(reg) 0x104b1:	pop	rbp
(reg) 0x104b2:	jmp	rax
---
(reg) 0x104b1:	pop	r13
(reg) 0x104b3:	jmp	rax
---
(reg) 0x104b1:	pop	rsp
(reg) 0x104b2:	pop	r13
(reg) 0x104b4:	jmp	rax
---
(reg) 0x104b1:	pop	r12
(reg) 0x104b3:	pop	r13
(reg) 0x104b5:	jmp	rax
---
(reg) 0x104b1:	pop	rbp
(reg) 0x104b2:	pop	r12
(reg) 0x104b4:	pop	r13
(reg) 0x104b6:	jmp	rax
---
(reg) 0x104b1:	pop	rbx
(reg) 0x104b2:	pop	rbp
(reg) 0x104b3:	pop	r12
(reg) 0x104b5:	pop	r13
(reg) 0x104b7:	jmp	rax
---
(reg) 0x104b1:	out	0x5b, eax
(reg) 0x104b3:	pop	rbp
(reg) 0x104b4:	pop	r12
(reg) 0x104b6:	pop	r13
(reg) 0x104b8:	jmp	rax
---
(reg) 0x104b1:	mov	edi, esp
(reg) 0x104b3:	pop	rbx
(reg) 0x104b4:	pop	rbp
(reg) 0x104b5:	pop	r12
(reg) 0x104b7:	pop	r13
(reg) 0x104b9:	jmp	rax
---
(reg) 0x104b1:	mov	edi, r12d
(reg) 0x104b4:	pop	rbx
(reg) 0x104b5:	pop	rbp
(reg) 0x104b6:	pop	r12
(reg) 0x104b8:	pop	r13
(reg) 0x104ba:	jmp	rax
---
(reg) 0x11d8d:	jmp	rax
---
(reg) 0x12e1f:	jmp	rax
---
(reg) 0x12e1f:	add	eax, esp
(reg) 0x12e21:	jmp	rax
---
(reg) 0x12e1f:	add	rax, r12
(reg) 0x12e22:	jmp	rax
---
(reg) 0x12e1f:	test	byte ptr [rcx + rax - 0x20], cl
(reg) 0x12e23:	jmp	rax
---
(reg) 0x12e1f:	add	al, 0x84
(reg) 0x12e21:	add	rax, r12
(reg) 0x12e24:	jmp	rax
---
(reg) 0x12e1f:	movsxd	rax, dword ptr [rsp + rax*4]
(reg) 0x12e22:	add	rax, r12
(reg) 0x12e25:	jmp	rax
---
(reg) 0x12e1f:	movsxd	rax, dword ptr [r12 + rax*4]
(reg) 0x12e23:	add	rax, r12
(reg) 0x12e26:	jmp	rax
---
(reg) 0x12e1f:	js	0x12e6a
(reg) 0x12e21:	movsxd	rax, dword ptr [rsp + rax*4]
(reg) 0x12e24:	add	rax, r12
(reg) 0x12e27:	jmp	rax
---
(reg) 0x12e1f:	ja	0x12e99
(reg) 0x12e21:	movsxd	rax, dword ptr [r12 + rax*4]
(reg) 0x12e25:	add	rax, r12
(reg) 0x12e28:	jmp	rax
---
(reg) 0x175f1:	jmp	rbx
---
(reg) 0x175f1:	jmp	r11
---
(reg) 0x175f1:	xor	dl, dh
(reg) 0x175f3:	jmp	r11
---
(reg) 0x17a81:	jmp	rbx
---
(reg) 0x17a81:	jmp	r11
---
(reg) 0x17a81:	xor	dl, dh
(reg) 0x17a83:	jmp	r11
---
(reg) 0x17cdd:	jmp	rbx
---
(reg) 0x17cdd:	jmp	r11
---
(reg) 0x17cdd:	xor	dl, dh
(reg) 0x17cdf:	jmp	r11
---
(reg) 0x17e0a:	jmp	rbx
---
(reg) 0x17e0a:	jmp	r11
---
(reg) 0x17e0a:	sbb	dl, dh
(reg) 0x17e0c:	jmp	r11
---
(reg) 0x17ed8:	jmp	rbx
---
(reg) 0x17ed8:	jmp	r11
---
(reg) 0x17ed8:	sbb	dl, dh
(reg) 0x17eda:	jmp	r11
---
(reg) 0x17f98:	jmp	rbx
---
(reg) 0x17f98:	jmp	r11
---
(reg) 0x17f98:	sbb	dl, dh
(reg) 0x17f9a:	jmp	r11
---
(reg) 0x1935c:	jmp	rdx
---
(reg) 0x1935c:	add	edx, eax
(reg) 0x1935e:	jmp	rdx
---
(reg) 0x1935c:	add	rdx, rax
(reg) 0x1935f:	jmp	rdx
---
(reg) 0x1935c:	add	al, 0x82
(reg) 0x1935e:	add	rdx, rax
(reg) 0x19361:	jmp	rdx
---
(reg) 0x1935c:	movsxd	rax, dword ptr [rdx + rax*4]
(reg) 0x1935f:	add	rdx, rax
(reg) 0x19362:	jmp	rdx
---
(reg) 0x1935c:	movsxd	rax, dword ptr [rdx + rax*4]
(reg) 0x19360:	add	rdx, rax
(reg) 0x19363:	jmp	rdx
---
(reg) 0x1935c:	add	byte ptr [rax + 0x63], cl
(reg) 0x1935f:	add	al, 0x82
(reg) 0x19361:	add	rdx, rax
(reg) 0x19364:	jmp	rdx
---
(reg) 0x1935c:	add	byte ptr [rax], al
(reg) 0x1935e:	movsxd	rax, dword ptr [rdx + rax*4]
(reg) 0x19362:	add	rdx, rax
(reg) 0x19365:	jmp	rdx
---
(reg) 0x19699:	jmp	rax
---
(reg) 0x19699:	add	eax, ecx
(reg) 0x1969b:	jmp	rax
---
(reg) 0x19699:	add	rax, rcx
(reg) 0x1969c:	jmp	rax
---
(reg) 0x19699:	add	al, 0x81
(reg) 0x1969b:	add	rax, rcx
(reg) 0x1969e:	jmp	rax
---
(reg) 0x19699:	movsxd	rax, dword ptr [rcx + rax*4]
(reg) 0x1969c:	add	rax, rcx
(reg) 0x1969f:	jmp	rax
---
(reg) 0x19699:	movsxd	rax, dword ptr [rcx + rax*4]
(reg) 0x1969d:	add	rax, rcx
(reg) 0x196a0:	jmp	rax
---
(reg) 0x19699:	ja	0x196b9
(reg) 0x1969b:	movsxd	rax, dword ptr [rcx + rax*4]
(reg) 0x1969f:	add	rax, rcx
(reg) 0x196a2:	jmp	rax
---
(reg) 0x19ee5:	jmp	rax
---
(reg) 0x19ee5:	add	eax, ecx
(reg) 0x19ee7:	jmp	rax
---
(reg) 0x19ee5:	add	rax, rcx
(reg) 0x19ee8:	jmp	rax
---
(reg) 0x19ee5:	or	al, 0x88
(reg) 0x19ee7:	add	rax, rcx
(reg) 0x19eea:	jmp	rax
---
(reg) 0x19ee5:	movsxd	rcx, dword ptr [rax + rcx*4]
(reg) 0x19ee8:	add	rax, rcx
(reg) 0x19eeb:	jmp	rax
---
(reg) 0x19ee5:	movsxd	rcx, dword ptr [rax + rcx*4]
(reg) 0x19ee9:	add	rax, rcx
(reg) 0x19eec:	jmp	rax
---
(reg) 0x19ee5:	stc	
(reg) 0x19ee6:	movsxd	rcx, dword ptr [rax + rcx*4]
(reg) 0x19eea:	add	rax, rcx
(reg) 0x19eed:	jmp	rax
---
(reg) 0x19ee5:	mov	ecx, edi
(reg) 0x19ee7:	movsxd	rcx, dword ptr [rax + rcx*4]
(reg) 0x19eeb:	add	rax, rcx
(reg) 0x19eee:	jmp	rax
---
(reg) 0x1b5ea:	jmp	rdx
---
(reg) 0x1b5ea:	nop	
(reg) 0x1b5eb:	jmp	rdx
---
(reg) 0x1b5ea:	mov	ebp, ecx
(reg) 0x1b5ec:	nop	
(reg) 0x1b5ed:	jmp	rdx
---
(reg) 0x1b5ea:	mov	rbp, r9
(reg) 0x1b5ed:	nop	
(reg) 0x1b5ee:	jmp	rdx
---
(reg) 0x1b5ea:	mov	esp, eax
(reg) 0x1b5ec:	mov	rbp, r9
(reg) 0x1b5ef:	nop	
(reg) 0x1b5f0:	jmp	rdx
---
(reg) 0x1b5ea:	mov	rsp, r8
(reg) 0x1b5ed:	mov	rbp, r9
(reg) 0x1b5f0:	nop	
(reg) 0x1b5f1:	jmp	rdx
---
(reg) 0x1b5ea:	mov	eax, esi
(reg) 0x1b5ec:	mov	rsp, r8
(reg) 0x1b5ef:	mov	rbp, r9
(reg) 0x1b5f2:	nop	
(reg) 0x1b5f3:	jmp	rdx
---
(reg) 0x1bb0a:	jmp	rdx
---
(reg) 0x1bb0a:	jmp	r10
---
(reg) 0x1bb0a:	adc	al, 0xa
(reg) 0x1bb0c:	jmp	r10
---
(reg) 0x1bb0a:	lea	edx, [rdx + rcx]
(reg) 0x1bb0d:	jmp	r10
---
(reg) 0x1bb0a:	lea	r10, [r10 + r9]
(reg) 0x1bb0e:	jmp	r10
---
(reg) 0x1bb0a:	mov	cl, byte ptr [rdi - 0x73]
(reg) 0x1bb0d:	adc	al, 0xa
(reg) 0x1bb0f:	jmp	r10
---
(reg) 0x1bb0a:	or	al, 0x8a
(reg) 0x1bb0c:	lea	r10, [r10 + r9]
(reg) 0x1bb10:	jmp	r10
---
(reg) 0x1bb0a:	movsxd	rcx, dword ptr [rdx + rcx*4]
(reg) 0x1bb0d:	lea	r10, [r10 + r9]
(reg) 0x1bb11:	jmp	r10
---
(reg) 0x1bb0a:	movsxd	r9, dword ptr [r10 + r9*4]
(reg) 0x1bb0e:	lea	r10, [r10 + r9]
(reg) 0x1bb12:	jmp	r10
---
(reg) 0x1e014:	jmp	rax
---
(reg) 0x1e014:	add	eax, ecx
(reg) 0x1e016:	jmp	rax
---
(reg) 0x1e014:	add	rax, rcx
(reg) 0x1e017:	jmp	rax
---
(reg) 0x1e014:	or	al, 0x88
(reg) 0x1e016:	add	rax, rcx
(reg) 0x1e019:	jmp	rax
---
(reg) 0x1e014:	movsxd	rcx, dword ptr [rax + rcx*4]
(reg) 0x1e017:	add	rax, rcx
(reg) 0x1e01a:	jmp	rax
---
(reg) 0x1e014:	movsxd	rcx, dword ptr [rax + rcx*4]
(reg) 0x1e018:	add	rax, rcx
(reg) 0x1e01b:	jmp	rax
---
(reg) 0x1e014:	loope	0x1e01d
(reg) 0x1e016:	movsxd	rcx, dword ptr [rax + rcx*4]
(reg) 0x1e01a:	add	rax, rcx
(reg) 0x1e01d:	jmp	rax
---
(reg) 0x1e284:	jmp	rax
---
(reg) 0x1e284:	add	eax, ecx
(reg) 0x1e286:	jmp	rax
---
(reg) 0x1e284:	add	rax, rcx
(reg) 0x1e287:	jmp	rax
---
(reg) 0x1e284:	or	al, 0x88
(reg) 0x1e286:	add	rax, rcx
(reg) 0x1e289:	jmp	rax
---
(reg) 0x1e284:	movsxd	rcx, dword ptr [rax + rcx*4]
(reg) 0x1e287:	add	rax, rcx
(reg) 0x1e28a:	jmp	rax
---
(reg) 0x1e284:	movsxd	rcx, dword ptr [rax + rcx*4]
(reg) 0x1e288:	add	rax, rcx
(reg) 0x1e28b:	jmp	rax
---
(reg) 0x1e284:	loope	0x1e28d
(reg) 0x1e286:	movsxd	rcx, dword ptr [rax + rcx*4]
(reg) 0x1e28a:	add	rax, rcx
(reg) 0x1e28d:	jmp	rax
---
(reg) 0x1e877:	jmp	rsp
---
(reg) 0x1edcf:	jmp	rax
---
(reg) 0x1edcf:	loopne	0x1edcf
(reg) 0x1edd1:	jmp	rax
---
(reg) 0x1f443:	jmp	rax
---
(reg) 0x228e3:	jmp	rsp
---
(reg) 0x228e3:	std	
(reg) 0x228e4:	jmp	rsp
---
(reg) 0x228e3:	in	eax, dx
(reg) 0x228e4:	std	
(reg) 0x228e5:	jmp	rsp
---
(reg) 0x228e3:	cmp	al, 0xed
(reg) 0x228e5:	std	
(reg) 0x228e6:	jmp	rsp
---
(reg) 0x228e3:	add	byte ptr [rax], al
(reg) 0x228e5:	cmp	al, 0xed
(reg) 0x228e7:	std	
(reg) 0x228e8:	jmp	rsp
---
(reg) 0x2294b:	jmp	rsp
---
(reg) 0x2296b:	jmp	rsp
---
(reg) 0x22b8b:	jmp	rsp
---
(reg) 0x22b8b:	add	byte ptr [rsi + rsi - 1], ch
(reg) 0x22b8f:	jmp	rsp
---
(reg) 0x22b8b:	sbb	eax, dword ptr [rax]
(reg) 0x22b8d:	add	byte ptr [rsi + rsi - 1], ch
(reg) 0x22b91:	jmp	rsp
---
(reg) 0x22be3:	jmp	rsp
---
(reg) 0x22d0b:	jmp	rsp
---
(reg) 0x22d3b:	jmp	rsp
---
(reg) 0x22d3b:	xchg	bh, bh
(reg) 0x22d3d:	jmp	rsp
---
(reg) 0x22d3b:	mov	esp, 0xc000024
(reg) 0x22d40:	xchg	bh, bh
(reg) 0x22d42:	jmp	rsp
---
(reg) 0x22dbb:	jmp	rsp
---
(reg) 0x22dbb:	mov	edi, edi
(reg) 0x22dbd:	jmp	rsp
---
(reg) 0x22dbb:	pop	rsp
(reg) 0x22dbc:	mov	edi, edi
(reg) 0x22dbe:	jmp	rsp
---
(loader) 0x22dbb:	pop	rsp
(reg) 0x22dbb:	add	byte ptr [rbx + rcx*4 - 1], bl
(reg) 0x22dbf:	jmp	rsp
---
(reg) 0x22dbb:	add	byte ptr [rax], al
(reg) 0x22dbd:	pop	rsp
(reg) 0x22dbe:	mov	edi, edi
(reg) 0x22dc0:	jmp	rsp
---
(loader) 0x22dbd:	pop	rsp
(reg) 0x22dbb:	add	byte ptr es:[rax], al
(reg) 0x22dbe:	pop	rsp
(reg) 0x22dbf:	mov	edi, edi
(reg) 0x22dc1:	jmp	rsp
---
(loader) 0x22dbe:	pop	rsp
(reg) 0x22dbb:	dec	esp
(reg) 0x22dbd:	add	byte ptr es:[rax], al
(reg) 0x22dc0:	pop	rsp
(reg) 0x22dc1:	mov	edi, edi
(reg) 0x22dc3:	jmp	rsp
---
(loader) 0x22dc0:	pop	rsp
(reg) 0x2317b:	jmp	rsp
---
(reg) 0x2317b:	and	bh, dh
(reg) 0x2317d:	jmp	rsp
---
(reg) 0x23763:	jmp	rdx
---
(reg) 0x23763:	mov	dh, bh
(reg) 0x23765:	jmp	rdx
---
(reg) 0x2392b:	jmp	rdi
---
(reg) 0x24213:	jmp	rax
---
(reg) 0x2439b:	jmp	rdi
---
(reg) 0x2439b:	or	bh, bh
(reg) 0x2439d:	jmp	rdi
---
(reg) 0x24423:	jmp	rsi
---
(reg) 0x24423:	adc	bh, bh
(reg) 0x24425:	jmp	rsi
---
(reg) 0x24423:	rcl	byte ptr [rax], 0xff
(reg) 0x24426:	jmp	rsi
---
(reg) 0x24423:	add	al, al
(reg) 0x24425:	adc	bh, bh
(reg) 0x24427:	jmp	rsi
---
(reg) 0x24423:	add	byte ptr [rax], al
(reg) 0x24425:	rcl	byte ptr [rax], 0xff
(reg) 0x24428:	jmp	rsi
---
(reg) 0x24423:	je	0x2443a
(reg) 0x24425:	add	byte ptr [rax], al
(reg) 0x24427:	rcl	byte ptr [rax], 0xff
(reg) 0x2442a:	jmp	rsi
---
(reg) 0x24423:	add	byte ptr [rbp + rdx], dh
(reg) 0x24427:	add	al, al
(reg) 0x24429:	adc	bh, bh
(reg) 0x2442b:	jmp	rsi
---
(reg) 0x24423:	add	byte ptr [rax], al
(reg) 0x24425:	je	0x2443c
(reg) 0x24427:	add	byte ptr [rax], al
(reg) 0x24429:	rcl	byte ptr [rax], 0xff
(reg) 0x2442c:	jmp	rsi
---
(reg) 0x24653:	jmp	rsi
---
(reg) 0x24653:	cmp	edi, edi
(reg) 0x24655:	jmp	rsi
---
(reg) 0x24653:	push	rax
(reg) 0x24654:	cmp	edi, edi
(reg) 0x24656:	jmp	rsi
---
(reg) 0x24653:	add	byte ptr [rax], al
(reg) 0x24655:	push	rax
(reg) 0x24656:	cmp	edi, edi
(reg) 0x24658:	jmp	rsi
---
(reg) 0x25263:	jmp	rbx
---
(reg) 0x25263:	mov	edi, edi
(reg) 0x25265:	jmp	rbx
---
(reg) 0x25263:	add	byte ptr [rax], ah
(reg) 0x25265:	mov	edi, edi
(reg) 0x25267:	jmp	rbx
---
(reg) 0x25263:	and	eax, dword ptr [rax]
(reg) 0x25265:	add	byte ptr [rax], ah
(reg) 0x25267:	mov	edi, edi
(reg) 0x25269:	jmp	rbx
---
(reg) 0x1e7c:	call	rax
---
(reg) 0x1e7c:	jge	0x1e36
(reg) 0x1e7e:	call	rax
---
(reg) 0x1e7c:	mov	dword ptr [rbp - 0x48], edi
(reg) 0x1e7f:	call	rax
---
(reg) 0x1e7c:	mov	qword ptr [rbp - 0x48], rdi
(reg) 0x1e80:	call	rax
---
(reg) 0x1e7c:	mov	al, 0x48
(reg) 0x1e7e:	mov	dword ptr [rbp - 0x48], edi
(reg) 0x1e81:	call	rax
---
(reg) 0x1e7c:	mov	r8b, 0x48
(reg) 0x1e7f:	mov	dword ptr [rbp - 0x48], edi
(reg) 0x1e82:	call	rax
---
(reg) 0x1e7c:	mov	dword ptr [rbp - 0x50], ecx
(reg) 0x1e7f:	mov	qword ptr [rbp - 0x48], rdi
(reg) 0x1e83:	call	rax
---
(reg) 0x1e7c:	mov	qword ptr [rbp - 0x50], rcx
(reg) 0x1e80:	mov	qword ptr [rbp - 0x48], rdi
(reg) 0x1e84:	call	rax
---
(reg) 0x1e7c:	test	al, 0x48
(reg) 0x1e7e:	mov	dword ptr [rbp - 0x50], ecx
(reg) 0x1e81:	mov	qword ptr [rbp - 0x48], rdi
(reg) 0x1e85:	call	rax
---
(reg) 0x421a:	call	rdx
---
(reg) 0x421a:	out	dx, eax
(reg) 0x421b:	call	rdx
---
(reg) 0x421a:	add	edi, ebp
(reg) 0x421c:	call	rdx
---
(reg) 0x421a:	add	rdi, r13
(reg) 0x421d:	call	rdx
---
(reg) 0x421a:	add	al, 0x4c
(reg) 0x421c:	add	edi, ebp
(reg) 0x421e:	call	rdx
---
(reg) 0x421a:	out	4, eax
(reg) 0x421c:	add	rdi, r13
(reg) 0x421f:	call	rdx
---
(reg) 0x421a:	shl	edi, 4
(reg) 0x421d:	add	rdi, r13
(reg) 0x4220:	call	rdx
---
(reg) 0x421a:	shl	rdi, 4
(reg) 0x421e:	add	rdi, r13
(reg) 0x4221:	call	rdx
---
(reg) 0x421a:	shl	rdi, 4
(reg) 0x421f:	add	rdi, r13
(reg) 0x4222:	call	rdx
---
(reg) 0x421a:	mov	dword ptr [rdi + 0x48], 0x4c04e7c1
(reg) 0x4221:	add	edi, ebp
(reg) 0x4223:	call	rdx
---
(reg) 0x4be8:	call	rax
---
(reg) 0x4be8:	add	edi, ebx
(reg) 0x4bea:	call	rax
---
(reg) 0x4be8:	add	rdi, rbx
(reg) 0x4beb:	call	rax
---
(reg) 0x4be8:	add	al, 0x48
(reg) 0x4bea:	add	edi, ebx
(reg) 0x4bec:	call	rax
---
(reg) 0x4be8:	out	4, eax
(reg) 0x4bea:	add	rdi, rbx
(reg) 0x4bed:	call	rax
---
(reg) 0x4be8:	shl	edi, 4
(reg) 0x4beb:	add	rdi, rbx
(reg) 0x4bee:	call	rax
---
(reg) 0x4be8:	shl	rdi, 4
(reg) 0x4bec:	add	rdi, rbx
(reg) 0x4bef:	call	rax
---
(reg) 0x4be8:	shl	rdi, 4
(reg) 0x4bed:	add	rdi, rbx
(reg) 0x4bf0:	call	rax
---
(reg) 0x4be8:	mov	dword ptr [rdi + 0x48], 0x4804e7c1
(reg) 0x4bef:	add	edi, ebx
(reg) 0x4bf1:	call	rax
---
(reg) 0x4db0:	call	rax
---
(reg) 0x4db0:	add	byte ptr [rax], al
(reg) 0x4db2:	call	rax
---
(reg) 0x4db0:	add	dword ptr [rax], eax
(reg) 0x4db2:	add	byte ptr [rax], al
(reg) 0x4db4:	call	rax
---
(reg) 0x4db0:	mov	edi, 1
(reg) 0x4db5:	call	rax
---
(reg) 0x4ee1:	call	rax
---
(reg) 0x4ee1:	mov	edx, ebp
(reg) 0x4ee3:	call	rax
---
(reg) 0x4ee1:	mov	rdx, r13
(reg) 0x4ee4:	call	rax
---
(reg) 0x4ee1:	fisttp	word ptr [rcx + rcx*4 - 0x16]
(reg) 0x4ee5:	call	rax
---
(reg) 0x4ee1:	mov	edi, ebx
(reg) 0x4ee3:	mov	rdx, r13
(reg) 0x4ee6:	call	rax
---
(reg) 0x4ee1:	mov	rdi, rbx
(reg) 0x4ee4:	mov	rdx, r13
(reg) 0x4ee7:	call	rax
---
(reg) 0x4ee1:	fisttp	qword ptr [rax - 0x77]
(reg) 0x4ee4:	fisttp	word ptr [rcx + rcx*4 - 0x16]
(reg) 0x4ee8:	call	rax
---
(reg) 0x4ee1:	add	ebp, ebx
(reg) 0x4ee3:	mov	rdi, rbx
(reg) 0x4ee6:	mov	rdx, r13
(reg) 0x4ee9:	call	rax
---
(reg) 0x4ee1:	add	r13, rbx
(reg) 0x4ee4:	mov	rdi, rbx
(reg) 0x4ee7:	mov	rdx, r13
(reg) 0x4eea:	call	rax
---
(reg) 0x5c20:	call	rax
---
(reg) 0x5c20:	call	r8
---
(reg) 0x5c20:	out	0x41, al
(reg) 0x5c22:	call	rax
---
(reg) 0x5c20:	add	esi, esp
(reg) 0x5c22:	call	r8
---
(reg) 0x5c20:	add	rsi, r12
(reg) 0x5c23:	call	r8
---
(reg) 0x5c20:	add	al, 0x4c
(reg) 0x5c22:	add	esi, esp
(reg) 0x5c24:	call	r8
---
(reg) 0x5c20:	out	4, al
(reg) 0x5c22:	add	rsi, r12
(reg) 0x5c25:	call	r8
---
(reg) 0x5c20:	shl	esi, 4
(reg) 0x5c23:	add	rsi, r12
(reg) 0x5c26:	call	r8
---
(reg) 0x5c20:	shl	rsi, 4
(reg) 0x5c24:	add	rsi, r12
(reg) 0x5c27:	call	r8
---
(reg) 0x5c20:	test	dword ptr [rax - 0x3f], 0x14c04e6
(reg) 0x5c27:	out	0x41, al
(reg) 0x5c29:	call	rax
---
(reg) 0x6f8b:	call	rax
---
(reg) 0x6f8b:	mov	edx, esi
(reg) 0x6f8d:	call	rax
---
(reg) 0x6f8b:	mov	rdx, r14
(reg) 0x6f8e:	call	rax
---
(reg) 0x6f8b:	out	0x4c, al
(reg) 0x6f8d:	mov	edx, esi
(reg) 0x6f8f:	call	rax
---
(reg) 0x6f8b:	add	esi, esp
(reg) 0x6f8d:	mov	rdx, r14
(reg) 0x6f90:	call	rax
---
(reg) 0x6f8b:	add	r14, r12
(reg) 0x6f8e:	mov	rdx, r14
(reg) 0x6f91:	call	rax
---
(reg) 0x6f8b:	add	al, 0x4d
(reg) 0x6f8d:	add	esi, esp
(reg) 0x6f8f:	mov	rdx, r14
(reg) 0x6f92:	call	rax
---
(reg) 0x6f8b:	out	4, al
(reg) 0x6f8d:	add	r14, r12
(reg) 0x6f90:	mov	rdx, r14
(reg) 0x6f93:	call	rax
---
(reg) 0x6f8b:	shl	esi, 4
(reg) 0x6f8e:	add	r14, r12
(reg) 0x6f91:	mov	rdx, r14
(reg) 0x6f94:	call	rax
---
(reg) 0x7208:	call	rdx
---
(reg) 0x7208:	add	edi, esp
(reg) 0x720a:	call	rdx
---
(reg) 0x7208:	add	rdi, r12
(reg) 0x720b:	call	rdx
---
(reg) 0x7208:	add	al, 0x4c
(reg) 0x720a:	add	edi, esp
(reg) 0x720c:	call	rdx
---
(reg) 0x7208:	out	4, eax
(reg) 0x720a:	add	rdi, r12
(reg) 0x720d:	call	rdx
---
(reg) 0x7208:	shl	edi, 4
(reg) 0x720b:	add	rdi, r12
(reg) 0x720e:	call	rdx
---
(reg) 0x7208:	shl	rdi, 4
(reg) 0x720c:	add	rdi, r12
(reg) 0x720f:	call	rdx
---
(reg) 0x7208:	shl	rdi, 4
(reg) 0x720d:	add	rdi, r12
(reg) 0x7210:	call	rdx
---
(reg) 0x7208:	mov	dword ptr [rdi + 0x48], 0x4c04e7c1
(reg) 0x720f:	add	edi, esp
(reg) 0x7211:	call	rdx
---
(reg) 0x901f:	call	rax
---
(reg) 0x901f:	add	esi, esp
(reg) 0x9021:	call	rax
---
(reg) 0x901f:	add	rsi, r12
(reg) 0x9022:	call	rax
---
(reg) 0x901f:	add	al, 0x4c
(reg) 0x9021:	add	esi, esp
(reg) 0x9023:	call	rax
---
(reg) 0x901f:	out	4, al
(reg) 0x9021:	add	rsi, r12
(reg) 0x9024:	call	rax
---
(reg) 0x901f:	shl	esi, 4
(reg) 0x9022:	add	rsi, r12
(reg) 0x9025:	call	rax
---
(reg) 0x901f:	shl	rsi, 4
(reg) 0x9023:	add	rsi, r12
(reg) 0x9026:	call	rax
---
(reg) 0x901f:	shl	rsi, 4
(reg) 0x9024:	add	rsi, r12
(reg) 0x9027:	call	rax
---
(reg) 0x901f:	mov	byte ptr [rdi + 0x48], 0xc1
(reg) 0x9023:	out	4, al
(reg) 0x9025:	add	rsi, r12
(reg) 0x9028:	call	rax
---
(reg) 0xc54e:	call	rax
---
(reg) 0xc54e:	add	al, 0x24
(reg) 0xc550:	call	rax
---
(reg) 0xc54e:	add	eax, dword ptr [rsp]
(reg) 0xc551:	call	rax
---
(reg) 0xc54e:	add	rax, qword ptr [r12]
(reg) 0xc552:	call	rax
---
(reg) 0xc54e:	sbb	byte ptr [rcx + 3], cl
(reg) 0xc551:	add	al, 0x24
(reg) 0xc553:	call	rax
---
(reg) 0xc54e:	add	ebx, 0x18
(reg) 0xc551:	add	rax, qword ptr [r12]
(reg) 0xc555:	call	rax
---
(reg) 0xc54e:	add	rbx, 0x18
(reg) 0xc552:	add	rax, qword ptr [r12]
(reg) 0xc556:	call	rax
---
(reg) 0xc9e7:	call	rax
---
(reg) 0xc9e7:	add	eax, dword ptr [rdi]
(reg) 0xc9e9:	call	rax
---
(reg) 0xc9e7:	add	rax, qword ptr [r15]
(reg) 0xc9ea:	call	rax
---
(reg) 0xc9e7:	mov	eax, dword ptr [rbx + 0x10]
(reg) 0xc9ea:	add	rax, qword ptr [r15]
(reg) 0xc9ed:	call	rax
---
(reg) 0xc9e7:	mov	rax, qword ptr [rbx + 0x10]
(reg) 0xc9eb:	add	rax, qword ptr [r15]
(reg) 0xc9ee:	call	rax
---
(loader) 0xc9e7:	mov	rax, qword ptr [rbx + 0x10]
(reg) 0xc9e7:	add	byte ptr [rax], al
(reg) 0xc9e9:	mov	rax, qword ptr [rbx + 0x10]
(reg) 0xc9ed:	add	rax, qword ptr [r15]
(reg) 0xc9f0:	call	rax
---
(loader) 0xc9e9:	mov	rax, qword ptr [rbx + 0x10]
(reg) 0xcbf6:	call	rax
---
(reg) 0xcbf6:	mov	dword ptr [rbp - 0xd0], edx
(reg) 0xcbfc:	call	rax
---
(reg) 0xcbf6:	mov	qword ptr [rbp - 0xd0], r10
(reg) 0xcbfd:	call	rax
---
(reg) 0xcd9e:	call	rax
---
(reg) 0xcd9e:	mov	dword ptr [rbp - 0xd0], edx
(reg) 0xcda4:	call	rax
---
(reg) 0xcd9e:	mov	qword ptr [rbp - 0xd0], r10
(reg) 0xcda5:	call	rax
---
(reg) 0xd297:	call	rax
---
(reg) 0xd297:	add	eax, dword ptr [rdi]
(reg) 0xd299:	call	rax
---
(reg) 0xd297:	add	rax, qword ptr [r15]
(reg) 0xd29a:	call	rax
---
(reg) 0xd297:	mov	eax, dword ptr [rbx + 0x10]
(reg) 0xd29a:	add	rax, qword ptr [r15]
(reg) 0xd29d:	call	rax
---
(reg) 0xd297:	mov	rax, qword ptr [rbx + 0x10]
(reg) 0xd29b:	add	rax, qword ptr [r15]
(reg) 0xd29e:	call	rax
---
(loader) 0xd297:	mov	rax, qword ptr [rbx + 0x10]
(reg) 0xd297:	add	byte ptr [rax], al
(reg) 0xd299:	mov	rax, qword ptr [rbx + 0x10]
(reg) 0xd29d:	add	rax, qword ptr [r15]
(reg) 0xd2a0:	call	rax
---
(loader) 0xd299:	mov	rax, qword ptr [rbx + 0x10]
(reg) 0xd382:	call	rax
---
(reg) 0xd382:	mov	dword ptr [rbp - 0xd0], edx
(reg) 0xd388:	call	rax
---
(reg) 0xd382:	mov	qword ptr [rbp - 0xd0], r10
(reg) 0xd389:	call	rax
---
(reg) 0xd382:	and	al, 0x4c
(reg) 0xd384:	mov	dword ptr [rbp - 0xd0], edx
(reg) 0xd38a:	call	rax
---
(reg) 0xd382:	add	al, 0x24
(reg) 0xd384:	mov	qword ptr [rbp - 0xd0], r10
(reg) 0xd38b:	call	rax
---
(reg) 0xd509:	call	rax
---
(reg) 0xd509:	mov	eax, edx
(reg) 0xd50b:	call	rax
---
(reg) 0xd509:	mov	rax, rdx
(reg) 0xd50c:	call	rax
---
(reg) 0xd509:	add	edx, dword ptr [rax]
(reg) 0xd50b:	mov	rax, rdx
(reg) 0xd50e:	call	rax
---
(reg) 0xd509:	add	rdx, qword ptr [rax]
(reg) 0xd50c:	mov	rax, rdx
(reg) 0xd50f:	call	rax
---
(reg) 0xd509:	mov	edx, dword ptr [rdx + 8]
(reg) 0xd50c:	add	rdx, qword ptr [rax]
(reg) 0xd50f:	mov	rax, rdx
(reg) 0xd512:	call	rax
---
(reg) 0xd601:	call	rax
---
(reg) 0xd601:	mov	dword ptr [rbp - 0xd0], edx
(reg) 0xd607:	call	rax
---
(reg) 0xd601:	mov	qword ptr [rbp - 0xd0], r10
(reg) 0xd608:	call	rax
---
(reg) 0xd91f:	call	rax
---
(reg) 0xd91f:	mov	eax, edx
(reg) 0xd921:	call	rax
---
(reg) 0xd91f:	mov	rax, rdx
(reg) 0xd922:	call	rax
---
(reg) 0xd91f:	add	edx, dword ptr [rax]
(reg) 0xd921:	mov	rax, rdx
(reg) 0xd924:	call	rax
---
(reg) 0xd91f:	add	rdx, qword ptr [rax]
(reg) 0xd922:	mov	rax, rdx
(reg) 0xd925:	call	rax
---
(reg) 0xd91f:	mov	edx, dword ptr [rdx + 8]
(reg) 0xd922:	add	rdx, qword ptr [rax]
(reg) 0xd925:	mov	rax, rdx
(reg) 0xd928:	call	rax
---
(reg) 0xfba0:	call	rax
---
(reg) 0xfba0:	add	byte ptr [rax], al
(reg) 0xfba2:	call	rax
---
(reg) 0xfba0:	add	byte ptr [rax], al
(reg) 0xfba2:	add	byte ptr [rax], al
(reg) 0xfba4:	call	rax
---
(reg) 0xfba0:	add	byte ptr [rax], 0
(reg) 0xfba3:	add	byte ptr [rax], al
(reg) 0xfba5:	call	rax
---
(reg) 0xfba0:	nop	dword ptr [rax]
(reg) 0xfba7:	call	rax
---
(reg) 0xfe14:	call	rax
---
(reg) 0xfe14:	and	al, 0x28
(reg) 0xfe16:	call	rax
---
(reg) 0xfe14:	mov	edi, dword ptr [rsp + 0x28]
(reg) 0xfe18:	call	rax
---
(reg) 0xfe14:	mov	rdi, qword ptr [rsp + 0x28]
(reg) 0xfe19:	call	rax
---
(reg) 0xfe14:	or	al, 0x3a
(reg) 0xfe16:	mov	rdi, qword ptr [rsp + 0x28]
(reg) 0xfe1b:	call	rax
---
(reg) 0xfe14:	lea	ecx, [rdx + rdi]
(reg) 0xfe17:	mov	rdi, qword ptr [rsp + 0x28]
(reg) 0xfe1c:	call	rax
---
(reg) 0xfe14:	lea	r9, [r10 + rdi]
(reg) 0xfe18:	mov	rdi, qword ptr [rsp + 0x28]
(reg) 0xfe1d:	call	rax
---
(reg) 0xffac:	call	rax
---
(reg) 0xffac:	and	al, 0x30
(reg) 0xffae:	call	rax
---
(reg) 0xffac:	mov	edi, dword ptr [rsp + 0x30]
(reg) 0xffb0:	call	rax
---
(reg) 0xffac:	mov	rdi, qword ptr [rsp + 0x30]
(reg) 0xffb1:	call	rax
---
(reg) 0xffac:	and	al, 0x18
(reg) 0xffae:	mov	rdi, qword ptr [rsp + 0x30]
(reg) 0xffb3:	call	rax
---
(reg) 0xffac:	and	al, 0x18
(reg) 0xffaf:	mov	rdi, qword ptr [rsp + 0x30]
(reg) 0xffb4:	call	rax
---
(reg) 0xffac:	mov	eax, dword ptr [rsp + 0x18]
(reg) 0xffb0:	mov	rdi, qword ptr [rsp + 0x30]
(reg) 0xffb5:	call	rax
---
(reg) 0x10101:	call	rsp
---
(reg) 0x10101:	call	r12
---
(reg) 0x10101:	nop	dword ptr [rax]
(reg) 0x10104:	call	r12
---
(reg) 0x102a1:	call	rax
---
(reg) 0x102a1:	and	al, 0x18
(reg) 0x102a3:	call	rax
---
(reg) 0x102a1:	mov	edi, dword ptr [rsp + 0x18]
(reg) 0x102a5:	call	rax
---
(reg) 0x102a1:	mov	rdi, qword ptr [rsp + 0x18]
(reg) 0x102a6:	call	rax
---
(reg) 0x102a1:	and	al, 0x10
(reg) 0x102a3:	mov	rdi, qword ptr [rsp + 0x18]
(reg) 0x102a8:	call	rax
---
(reg) 0x102a1:	and	al, 0x10
(reg) 0x102a4:	mov	rdi, qword ptr [rsp + 0x18]
(reg) 0x102a9:	call	rax
---
(reg) 0x102a1:	mov	ecx, dword ptr [rsp + 0x10]
(reg) 0x102a5:	mov	rdi, qword ptr [rsp + 0x18]
(reg) 0x102aa:	call	rax
---
(reg) 0x10572:	call	rcx
---
(reg) 0x10572:	call	r9
---
(reg) 0x10572:	and	al, 0x30
(reg) 0x10574:	call	r9
---
(reg) 0x10572:	and	al, 0x30
(reg) 0x10575:	call	r9
---
(reg) 0x10572:	mov	ecx, dword ptr [rsp + 0x30]
(reg) 0x10576:	call	r9
---
(reg) 0x10572:	mov	r9, qword ptr [rsp + 0x30]
(reg) 0x10577:	call	r9
---
(loader) 0x10572:	mov	r9, qword ptr [rsp + 0x30]
(reg) 0x10572:	cmp	byte ptr [rbx + rcx*4 + 0x4c], cl
(reg) 0x10576:	and	al, 0x30
(reg) 0x10578:	call	r9
---
(reg) 0x10572:	and	al, 0x38
(reg) 0x10574:	mov	r9, qword ptr [rsp + 0x30]
(reg) 0x10579:	call	r9
---
(loader) 0x10574:	mov	r9, qword ptr [rsp + 0x30]
(reg) 0x10572:	jl	0x10598
(reg) 0x10574:	cmp	byte ptr [rbx + rcx*4 + 0x4c], cl
(reg) 0x10578:	and	al, 0x30
(reg) 0x1057a:	call	r9
---
(reg) 0x10688:	call	rax
---
(reg) 0x10688:	out	dx, eax
(reg) 0x10689:	call	rax
---
(reg) 0x10688:	mov	edi, ebp
(reg) 0x1068a:	call	rax
---
(reg) 0x10688:	out	0x89, al
(reg) 0x1068a:	out	dx, eax
(reg) 0x1068b:	call	rax
---
(reg) 0x10688:	mov	esi, esp
(reg) 0x1068a:	mov	edi, ebp
(reg) 0x1068c:	call	rax
---
(reg) 0x10688:	mov	rsi, r12
(reg) 0x1068b:	mov	edi, ebp
(reg) 0x1068d:	call	rax
---
(reg) 0x10688:	mov	edx, ebp
(reg) 0x1068a:	mov	rsi, r12
(reg) 0x1068d:	mov	edi, ebp
(reg) 0x1068f:	call	rax
---
(reg) 0x10688:	mov	rdx, r13
(reg) 0x1068b:	mov	rsi, r12
(reg) 0x1068e:	mov	edi, ebp
(reg) 0x10690:	call	rax
---
(reg) 0x10688:	add	ecx, dword ptr [rcx + rcx*4 - 0x16]
(reg) 0x1068c:	mov	rsi, r12
(reg) 0x1068f:	mov	edi, ebp
(reg) 0x10691:	call	rax
---
(reg) 0x10e13:	call	rax
---
(reg) 0x10e13:	add	eax, dword ptr [rbx]
(reg) 0x10e15:	call	rax
---
(reg) 0x10e13:	add	rax, qword ptr [rbx]
(reg) 0x10e16:	call	rax
---
(reg) 0x10e13:	mov	eax, dword ptr [rax + 8]
(reg) 0x10e16:	add	rax, qword ptr [rbx]
(reg) 0x10e19:	call	rax
---
(reg) 0x10e13:	mov	rax, qword ptr [rax + 8]
(reg) 0x10e17:	add	rax, qword ptr [rbx]
(reg) 0x10e1a:	call	rax
---
(loader) 0x10e13:	mov	rax, qword ptr [rax + 8]
(reg) 0x10e13:	je	0x10e1e
(reg) 0x10e15:	mov	rax, qword ptr [rax + 8]
(reg) 0x10e19:	add	rax, qword ptr [rbx]
(reg) 0x10e1c:	call	rax
---
(loader) 0x10e15:	mov	rax, qword ptr [rax + 8]
(reg) 0x10f3b:	call	rcx
---
(reg) 0x10f3b:	add	edi, ebx
(reg) 0x10f3d:	call	rcx
---
(reg) 0x10f3b:	add	rdi, rbx
(reg) 0x10f3e:	call	rcx
---
(reg) 0x10f3b:	add	al, 0x48
(reg) 0x10f3d:	add	edi, ebx
(reg) 0x10f3f:	call	rcx
---
(reg) 0x10f3b:	out	4, eax
(reg) 0x10f3d:	add	rdi, rbx
(reg) 0x10f40:	call	rcx
---
(reg) 0x10f3b:	shl	edi, 4
(reg) 0x10f3e:	add	rdi, rbx
(reg) 0x10f41:	call	rcx
---
(reg) 0x10f3b:	shl	rdi, 4
(reg) 0x10f3f:	add	rdi, rbx
(reg) 0x10f42:	call	rcx
---
(reg) 0x10f3b:	shl	rdi, 4
(reg) 0x10f40:	add	rdi, rbx
(reg) 0x10f43:	call	rcx
---
(reg) 0x10f3b:	mov	dword ptr [rdi + 0x48], 0x4804e7c1
(reg) 0x10f42:	add	edi, ebx
(reg) 0x10f44:	call	rcx
---
(reg) 0x12e7f:	call	rax
---
(reg) 0x12e7f:	add	eax, dword ptr [rsi]
(reg) 0x12e81:	call	rax
---
(reg) 0x12e7f:	add	rax, qword ptr [r14]
(reg) 0x12e82:	call	rax
---
(reg) 0x12e7f:	mov	eax, dword ptr [rbx + 0x10]
(reg) 0x12e82:	add	rax, qword ptr [r14]
(reg) 0x12e85:	call	rax
---
(reg) 0x12e7f:	mov	rax, qword ptr [rbx + 0x10]
(reg) 0x12e83:	add	rax, qword ptr [r14]
(reg) 0x12e86:	call	rax
---
(loader) 0x12e7f:	mov	rax, qword ptr [rbx + 0x10]
(reg) 0x15dea:	call	rdx
---
(reg) 0x15dea:	out	dx, eax
(reg) 0x15deb:	call	rdx
---
(reg) 0x15dea:	add	edi, ebp
(reg) 0x15dec:	call	rdx
---
(reg) 0x15dea:	add	rdi, r13
(reg) 0x15ded:	call	rdx
---
(reg) 0x15dea:	add	al, 0x4c
(reg) 0x15dec:	add	edi, ebp
(reg) 0x15dee:	call	rdx
---
(reg) 0x15dea:	out	4, eax
(reg) 0x15dec:	add	rdi, r13
(reg) 0x15def:	call	rdx
---
(reg) 0x15dea:	shl	edi, 4
(reg) 0x15ded:	add	rdi, r13
(reg) 0x15df0:	call	rdx
---
(reg) 0x15dea:	shl	rdi, 4
(reg) 0x15dee:	add	rdi, r13
(reg) 0x15df1:	call	rdx
---
(reg) 0x15dea:	shl	rdi, 4
(reg) 0x15def:	add	rdi, r13
(reg) 0x15df2:	call	rdx
---
(reg) 0x15dea:	mov	dword ptr [rdi + 0x48], 0x4c04e7c1
(reg) 0x15df1:	add	edi, ebp
(reg) 0x15df3:	call	rdx
---
(reg) 0x16453:	call	rax
---
(reg) 0x16453:	add	eax, dword ptr [rdx + 8]
(reg) 0x16456:	call	rax
---
(reg) 0x16453:	add	rax, qword ptr [rdx + 8]
(reg) 0x16457:	call	rax
---
(reg) 0x16453:	mov	eax, dword ptr [rdi]
(reg) 0x16455:	add	rax, qword ptr [rdx + 8]
(reg) 0x16459:	call	rax
---
(reg) 0x16453:	mov	rax, qword ptr [r15]
(reg) 0x16456:	add	rax, qword ptr [rdx + 8]
(reg) 0x1645a:	call	rax
---
(loader) 0x16453:	mov	rax, qword ptr [r15]
(reg) 0x16453:	je	0x1645e
(reg) 0x16455:	mov	rax, qword ptr [r15]
(reg) 0x16458:	add	rax, qword ptr [rdx + 8]
(reg) 0x1645c:	call	rax
---
(loader) 0x16455:	mov	rax, qword ptr [r15]
(reg) 0x1691f:	call	rax
---
(reg) 0x1691f:	add	edi, edi
(reg) 0x16921:	call	rax
---
(reg) 0x1691f:	add	rdi, r15
(reg) 0x16922:	call	rax
---
(reg) 0x1691f:	add	al, 0x4c
(reg) 0x16921:	add	edi, edi
(reg) 0x16923:	call	rax
---
(reg) 0x1691f:	out	4, eax
(reg) 0x16921:	add	rdi, r15
(reg) 0x16924:	call	rax
---
(reg) 0x1691f:	shl	edi, 4
(reg) 0x16922:	add	rdi, r15
(reg) 0x16925:	call	rax
---
(reg) 0x1691f:	shl	rdi, 4
(reg) 0x16923:	add	rdi, r15
(reg) 0x16926:	call	rax
---
(reg) 0x1691f:	shl	rdi, 4
(reg) 0x16924:	add	rdi, r15
(reg) 0x16927:	call	rax
---
(reg) 0x1691f:	mov	dword ptr [rdi + 0x48], 0x4c04e7c1
(reg) 0x16926:	add	edi, edi
(reg) 0x16928:	call	rax
---
(reg) 0x16cf6:	call	rax
---
(reg) 0x16cf6:	out	dx, eax
(reg) 0x16cf7:	call	rax
---
(reg) 0x16cf6:	add	edi, ebp
(reg) 0x16cf8:	call	rax
---
(reg) 0x16cf6:	add	rdi, r13
(reg) 0x16cf9:	call	rax
---
(reg) 0x16cf6:	add	al, 0x4c
(reg) 0x16cf8:	add	edi, ebp
(reg) 0x16cfa:	call	rax
---
(reg) 0x16cf6:	out	4, eax
(reg) 0x16cf8:	add	rdi, r13
(reg) 0x16cfb:	call	rax
---
(reg) 0x16cf6:	shl	edi, 4
(reg) 0x16cf9:	add	rdi, r13
(reg) 0x16cfc:	call	rax
---
(reg) 0x16cf6:	shl	rdi, 4
(reg) 0x16cfa:	add	rdi, r13
(reg) 0x16cfd:	call	rax
---
(reg) 0x16cf6:	shl	rdi, 4
(reg) 0x16cfb:	add	rdi, r13
(reg) 0x16cfe:	call	rax
---
(reg) 0x16cf6:	mov	dword ptr [rdi + 0x48], 0x4c04e7c1
(reg) 0x16cfd:	add	edi, ebp
(reg) 0x16cff:	call	rax
---
(reg) 0x16f7e:	call	rax
---
(reg) 0x16f7e:	add	edi, edi
(reg) 0x16f80:	call	rax
---
(reg) 0x16f7e:	add	rdi, r15
(reg) 0x16f81:	call	rax
---
(reg) 0x16f7e:	add	al, 0x4c
(reg) 0x16f80:	add	edi, edi
(reg) 0x16f82:	call	rax
---
(reg) 0x16f7e:	out	4, eax
(reg) 0x16f80:	add	rdi, r15
(reg) 0x16f83:	call	rax
---
(reg) 0x16f7e:	shl	edi, 4
(reg) 0x16f81:	add	rdi, r15
(reg) 0x16f84:	call	rax
---
(reg) 0x16f7e:	shl	rdi, 4
(reg) 0x16f82:	add	rdi, r15
(reg) 0x16f85:	call	rax
---
(reg) 0x16f7e:	shl	rdi, 4
(reg) 0x16f83:	add	rdi, r15
(reg) 0x16f86:	call	rax
---
(reg) 0x16f7e:	mov	dword ptr [rdi + 0x48], 0x4c04e7c1
(reg) 0x16f85:	add	edi, edi
(reg) 0x16f87:	call	rax
---
(reg) 0x1761d:	call	rbx
---
(reg) 0x1761d:	call	r11
---
(reg) 0x1761d:	sub	dl, dh
(reg) 0x1761f:	call	r11
---
(reg) 0x17aad:	call	rbx
---
(reg) 0x17aad:	call	r11
---
(reg) 0x17aad:	sub	dl, dh
(reg) 0x17aaf:	call	r11
---
(reg) 0x17d09:	call	rbx
---
(reg) 0x17d09:	call	r11
---
(reg) 0x17d09:	sub	dl, dh
(reg) 0x17d0b:	call	r11
---
(reg) 0x18a19:	call	rax
---
(reg) 0x18a19:	mov	edi, esp
(reg) 0x18a1b:	call	rax
---
(reg) 0x18a19:	mov	rdi, r12
(reg) 0x18a1c:	call	rax
---
(reg) 0x18a19:	or	dword ptr [rcx + rcx*4 - 0x19], ecx
(reg) 0x18a1d:	call	rax
---
(reg) 0x18a19:	je	0x18a24
(reg) 0x18a1b:	mov	rdi, r12
(reg) 0x18a1e:	call	rax
---
(reg) 0x18a19:	test	eax, eax
(reg) 0x18a1b:	je	0x18a26
(reg) 0x18a1d:	mov	rdi, r12
(reg) 0x18a20:	call	rax
---
(reg) 0x18a19:	test	rax, rax
(reg) 0x18a1c:	je	0x18a27
(reg) 0x18a1e:	mov	rdi, r12
(reg) 0x18a21:	call	rax
---
(reg) 0x18e47:	call	rax
---
(reg) 0x18e47:	cmp	al, 0x24
(reg) 0x18e49:	call	rax
---
(reg) 0x18e47:	mov	edi, dword ptr [rsp]
(reg) 0x18e4a:	call	rax
---
(reg) 0x18e47:	mov	rdi, qword ptr [r12]
(reg) 0x18e4b:	call	rax
---
(reg) 0x18e47:	je	0x18e4f
(reg) 0x18e49:	mov	rdi, qword ptr [r12]
(reg) 0x18e4d:	call	rax
---
(reg) 0x18e47:	sal	byte ptr [rsi + rax + 0x49], 0x8b
(reg) 0x18e4c:	cmp	al, 0x24
(reg) 0x18e4e:	call	rax
---
(reg) 0x18e47:	test	eax, eax
(reg) 0x18e49:	je	0x18e51
(reg) 0x18e4b:	mov	rdi, qword ptr [r12]
(reg) 0x18e4f:	call	rax
---
(reg) 0x18e47:	test	rax, rax
(reg) 0x18e4a:	je	0x18e52
(reg) 0x18e4c:	mov	rdi, qword ptr [r12]
(reg) 0x18e50:	call	rax
---
(reg) 0x198ab:	call	rsp
---
(reg) 0x198ab:	call	r12
---
(reg) 0x198ab:	and	byte ptr [rax], al
(reg) 0x198ad:	call	r12
---
(reg) 0x198ab:	or	eax, 0x20c45e
(reg) 0x198b0:	call	r12
---
(reg) 0x198ab:	mov	ecx, dword ptr [rip + 0x20c45e]
(reg) 0x198b1:	call	r12
---
(reg) 0x198ab:	mov	rcx, qword ptr [rip + 0x20c45e]
(reg) 0x198b2:	call	r12
---
(reg) 0x198ab:	fisttp	word ptr [rax - 0x75]
(reg) 0x198ae:	or	eax, 0x20c45e
(reg) 0x198b3:	call	r12
---
(reg) 0x1ed53:	call	rax
---
(reg) 0x1ed53:	loopne	0x1ed53
(reg) 0x1ed55:	call	rax
---
(reg) 0x1ef5b:	call	rax
---
(reg) 0x1ef6f:	call	rax
---
(reg) 0x1ef73:	call	rax
---
(reg) 0x1f073:	call	rcx
---
(reg) 0x1f0bf:	call	rcx
---
(reg) 0x1f0cb:	call	rcx
---
(reg) 0x1f0ff:	call	rcx
---
(reg) 0x1f10b:	call	rcx
---
(reg) 0x1f497:	call	rax
---
(reg) 0x1f4f7:	call	rax
---
(reg) 0x1f4f7:	shr	bl, 0xff
(reg) 0x1f4fa:	call	rax
---
(reg) 0x228ab:	call	rsp
---
(reg) 0x228ab:	std	
(reg) 0x228ac:	call	rsp
---
(reg) 0x228ab:	in	al, 0xfd
(reg) 0x228ad:	call	rsp
---
(reg) 0x2292b:	call	rsp
---
(reg) 0x2292b:	xor	al, 0xfe
(reg) 0x2292d:	call	rsp
---
(reg) 0x2292b:	insb	byte ptr [rdi], dx
(reg) 0x2292c:	xor	al, 0xfe
(reg) 0x2292e:	call	rsp
---
(reg) 0x2292b:	add	byte ptr [rsp + rsi - 2], ch
(reg) 0x2292f:	call	rsp
---
(reg) 0x2292b:	add	byte ptr [rax], al
(reg) 0x2292d:	insb	byte ptr [rdi], dx
(reg) 0x2292e:	xor	al, 0xfe
(reg) 0x22930:	call	rsp
---
(reg) 0x2292b:	or	dword ptr [rax], eax
(reg) 0x2292d:	add	byte ptr [rsp + rsi - 2], ch
(reg) 0x22931:	call	rsp
---
(reg) 0x2292b:	pushfq	
(reg) 0x2292c:	or	dword ptr [rax], eax
(reg) 0x2292e:	add	byte ptr [rsp + rsi - 2], ch
(reg) 0x22932:	call	rsp
---
(reg) 0x229a3:	call	rsp
---
(reg) 0x229db:	call	rsp
---
(reg) 0x229db:	mov	bl, 0xfe
(reg) 0x229dd:	call	rsp
---
(reg) 0x229db:	pop	rsp
(reg) 0x229dc:	mov	bl, 0xfe
(reg) 0x229de:	call	rsp
---
(loader) 0x229db:	pop	rsp
(reg) 0x229db:	add	byte ptr [rbx + rsi*4 - 2], bl
(reg) 0x229df:	call	rsp
---
(reg) 0x229db:	add	byte ptr [rax], al
(reg) 0x229dd:	pop	rsp
(reg) 0x229de:	mov	bl, 0xfe
(reg) 0x229e0:	call	rsp
---
(loader) 0x229dd:	pop	rsp
(reg) 0x229db:	sldt	word ptr [rax]
(reg) 0x229de:	pop	rsp
(reg) 0x229df:	mov	bl, 0xfe
(reg) 0x229e1:	call	rsp
---
(loader) 0x229de:	pop	rsp
(reg) 0x229db:	mov	ah, 0xf
(reg) 0x229dd:	add	byte ptr [rax], al
(reg) 0x229df:	pop	rsp
(reg) 0x229e0:	mov	bl, 0xfe
(reg) 0x229e2:	call	rsp
---
(loader) 0x229df:	pop	rsp
(reg) 0x22a13:	call	rsp
---
(reg) 0x22a13:	fdiv	st(6), st(0)
(reg) 0x22a15:	call	rsp
---
(reg) 0x22a8b:	call	rsp
---
(reg) 0x22af3:	call	rsp
---
(reg) 0x22af3:	or	al, 0xff
(reg) 0x22af5:	call	rsp
---
(reg) 0x22af3:	in	al, dx
(reg) 0x22af4:	or	al, 0xff
(reg) 0x22af6:	call	rsp
---
(reg) 0x22af3:	add	ah, ch
(reg) 0x22af5:	or	al, 0xff
(reg) 0x22af7:	call	rsp
---
(reg) 0x22af3:	add	byte ptr [rax], al
(reg) 0x22af5:	in	al, dx
(reg) 0x22af6:	or	al, 0xff
(reg) 0x22af8:	call	rsp
---
(reg) 0x22af3:	mov	ah, 0x17
(reg) 0x22af5:	add	byte ptr [rax], al
(reg) 0x22af7:	in	al, dx
(reg) 0x22af8:	or	al, 0xff
(reg) 0x22afa:	call	rsp
---
(reg) 0x22b43:	call	rsp
---
(reg) 0x22c43:	call	rsp
---
(reg) 0x22d63:	call	rsp
---
(reg) 0x22d63:	mov	bh, bh
(reg) 0x22d65:	call	rsp
---
(reg) 0x22d63:	mov	esp, 0x3c000025
(reg) 0x22d68:	mov	bh, bh
(reg) 0x22d6a:	call	rsp
---
(reg) 0x22dfb:	call	rsp
---
(reg) 0x22e9b:	call	rsp
---
(reg) 0x233a3:	call	rsp
---
(reg) 0xd173:	add	edx, esi
(reg) 0xd175:	jmp	rdx
---
(reg) 0xd173:	add	rdx, rsi
(reg) 0xd176:	jmp	rdx
---
(reg) 0xd173:	mov	dh, 0x48
(reg) 0xd175:	add	edx, esi
(reg) 0xd177:	jmp	rdx
---
(reg) 0xd173:	adc	al, 0xb6
(reg) 0xd175:	add	rdx, rsi
(reg) 0xd178:	jmp	rdx
---
(reg) 0xd173:	movsxd	rdx, dword ptr [rsi + rsi*4]
(reg) 0xd176:	add	rdx, rsi
(reg) 0xd179:	jmp	rdx
---
(reg) 0xd173:	movsxd	rdx, dword ptr [rsi + r14*4]
(reg) 0xd177:	add	rdx, rsi
(reg) 0xd17a:	jmp	rdx
---
(reg) 0xd173:	add	byte ptr [rdx + 0x63], cl
(reg) 0xd176:	adc	al, 0xb6
(reg) 0xd178:	add	rdx, rsi
(reg) 0xd17b:	jmp	rdx
---
(reg) 0xd173:	add	dword ptr [rax], eax
(reg) 0xd175:	movsxd	rdx, dword ptr [rsi + r14*4]
(reg) 0xd179:	add	rdx, rsi
(reg) 0xd17c:	jmp	rdx
---
(reg) 0xd173:	sbb	al, 1
(reg) 0xd175:	add	byte ptr [rdx + 0x63], cl
(reg) 0xd178:	adc	al, 0xb6
(reg) 0xd17a:	add	rdx, rsi
(reg) 0xd17d:	jmp	rdx
---
(reg) 0x6f8a:	mov	edx, esi
(reg) 0x6f8c:	call	rax
---
(reg) 0x6f8a:	mov	rdx, r14
(reg) 0x6f8d:	call	rax
---
(reg) 0x6f8a:	out	0x4c, al
(reg) 0x6f8c:	mov	edx, esi
(reg) 0x6f8e:	call	rax
---
(reg) 0x6f8a:	add	esi, esp
(reg) 0x6f8c:	mov	rdx, r14
(reg) 0x6f8f:	call	rax
---
(reg) 0x6f8a:	add	r14, r12
(reg) 0x6f8d:	mov	rdx, r14
(reg) 0x6f90:	call	rax
---
(reg) 0x6f8a:	add	al, 0x4d
(reg) 0x6f8c:	add	esi, esp
(reg) 0x6f8e:	mov	rdx, r14
(reg) 0x6f91:	call	rax
---
(reg) 0x6f8a:	out	4, al
(reg) 0x6f8c:	add	r14, r12
(reg) 0x6f8f:	mov	rdx, r14
(reg) 0x6f92:	call	rax
---
(reg) 0x6f8a:	shl	esi, 4
(reg) 0x6f8d:	add	r14, r12
(reg) 0x6f90:	mov	rdx, r14
(reg) 0x6f93:	call	rax
---
(reg) 0x6f8a:	shl	r14, 4
(reg) 0x6f8e:	add	r14, r12
(reg) 0x6f91:	mov	rdx, r14
(reg) 0x6f94:	call	rax
---
Gadgets information
============================================================
0x0000000000022db6 : add byte ptr [rax], al ; pop rsp ; mov edi, edi ; jmp rsp
0x0000000000022db5 : add byte ptr es:[rax], al ; pop rsp ; mov edi, edi ; jmp rsp
0x0000000000022db3 : dec esp ; add byte ptr es:[rax], al ; pop rsp ; mov edi, edi ; jmp rsp
0x0000000000022db8 : pop rsp ; mov edi, edi ; jmp rsp

Unique gadgets found: 4
